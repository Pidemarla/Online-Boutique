name: adserviceci

on: 
  workflow_dispatch:

# on:
#   push:
#     branches:
#       - main  # Set the branch you want to trigger the workflow on
#     paths-ignore:
#       - 'helm/**'
#       - 'k8s/**'
#       - '.github/workflows/**'
#       - 'README.md'
#       - 'src/adservice/**'
#       - 'src/cartservice/**'
#       - 'src/checkoutservice/**'
#       - 'src/frontend/**'
#       - 'src/paymentservice/**'
#       - 'src/recommendationservice/**'
#       - 'src/currencyservice/**'
#       - 'src/productcatalogservice/**'
#       - 'src/emailservice/**'
#       - 'src/shippingservice/**'
#       - 'src/shoppingassistantservice/**'

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .  # Use the current directory as the build context
          file: ./src/adservice/Dockerfile  # Path to your Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/adservice-service:${{github.run_id}}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # - name: SonarQube Analysis
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     sonar-scanner \
      #       -Dsonar.projectKey=Online-Boutique \
      #       -Dsonar.sources=. \
      #       -Dsonar.host.url=$SONAR_HOST_URL \
      #       -Dsonar.login=$SONAR_TOKEN

      - name: Cache SonarQube scanner
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonarqube-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: |
            ${{ runner.os }}-sonarqube-

      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.1.34581-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-*/bin/sonar-scanner /usr/local/bin/
          sudo chmod +x /usr/local/bin/sonar-scanner

      - name: Analyze adservice
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=adservice \
            -Dsonar.host.url=${{ secrets.SONARQUBE_URL }} \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=Online-Boutique/src/adservice/src

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   with:
      #     projectBaseDir: .
      #     args: >
      #       -Dsonar.projectKey=Online-Boutique
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  update-newtag-in-helm-chart:
    runs-on: self-hosted

    needs: build-and-push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/adservicetag: .*/adservicetag: "${{github.run_id}}"/' helm/adservice-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "saikrishnareddy9100@gmail.com"
        git config --global user.name "Pidemarla"
        git add helm/adservice-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
